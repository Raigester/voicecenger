services:
  voicenger:
    build:
      context: .
      target: prod
      args:
        ENV: prod
    container_name: voicenger
    restart: unless-stopped
    env_file: .env.prod
    environment:
      - DJANGO_SETTINGS_MODULE=voicenger.settings.production
    ports:
      - "8000:8000"
    volumes:
      - app:/app
    depends_on:
      - postgres
  nginx: 
    restart: unless-stopped
    container_name: nginx
    image: voicengerapp/frontend:v0.1
    # build:
    #   context: .
    #   dockerfile: ./docker/nginx/production/Dockerfile
    ports:
      - 80:80
      - 443:443
    # volumes:
    #   - static_volume:/app/static
    #   - media_volume:/app/media
    #   - ./docker/nginx/production:/etc/nginx/conf.d
    #   - ./docker/nginx/certbot/conf:/etc/letsencrypt
    #   - ./docker/nginx/certbot/www:/var/www/certbot
    depends_on: 
      - voicenger

  postgres:
    image: postgres:15
    container_name: postgres
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=postgres
    ports:
      - '5432:5432'
    volumes:
      - postgres_data:/var/lib/postgresql/data/

volumes:
  postgres_data:
  app: